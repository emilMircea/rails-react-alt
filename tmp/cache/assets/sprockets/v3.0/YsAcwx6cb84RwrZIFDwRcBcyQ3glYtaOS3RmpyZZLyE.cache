I"ž(function() {
  var TodoStore;

  TodoStore = (function() {
    TodoStore.displayName = 'TodoStore';

    function TodoStore() {
      this.bindActions(TodoActions);
      this.todos = [];
      this.exportPublicMethods({
        getTodos: this.getTodos
      });
    }

    TodoStore.prototype.onInitData = function(props) {
      return this.todos = props.todos;
    };

    TodoStore.prototype.onSubmitTodo = function(name) {
      $.ajax({
        type: 'POST',
        url: '/todos',
        data: {
          todo: {
            name: name
          }
        },
        success: (function(_this) {
          return function(response) {
            _this.todos.push(response);
            return _this.emitChange();
          };
        })(this),
        error: (function(_this) {
          return function(response) {
            console.log('error');
            return console.log(response);
          };
        })(this)
      });
      return false;
    };

    TodoStore.prototype.onDeleteTodo = function(todo_id) {
      var todoIndex;
      todoIndex = parseInt(e.target.value, 10);
      this.setState((function(_this) {
        return function(state) {
          state.todos.splice(0, 1);
          return {
            todos: state.todos
          };
          return $.ajax({
            type: 'DELETE',
            url: "/todos/" + todo_id,
            success: function(response) {
              _.find(_this.todos, {
                id: response.id
              }).deleteTodo();
              return _this.emitChange();
            },
            error: function(response) {
              console.log('error');
              return console.log(response);
            }
          });
        };
      })(this));
      return false;
    };

    TodoStore.prototype.getTodos = function() {
      return this.getState().todos;
    };

    return TodoStore;

  })();

  window.TodoStore = alt.createStore(TodoStore);

}).call(this);
:ET